zipは0個以上のファイル・フォルダをまとめて圧縮したもの

ローカルファイルヘッダのバイト数は30Byte+zipファイルネームの長さ
セントラルディレクトリヘッダのバイト数は46Byte(0x2E)+圧縮しているファイル名
最後のセントラルディレクトリのヘッダのバイト数は22Byte固定(0x16)

つまり1つ以上のファイルを保持しているzipは　ローカルファイルヘッダ+セントラルディレクトリヘッダ+ファイル内容+最後のセントラルディレクトリヘッダ
でヘッダ合計98Byte+(zipファイルのファイル名の長さ)+(圧縮されたファイルのファイル名の長さ)それぞれ最短で1Byteなので100Byte以上が確定する

ローカルファイルヘッダ
aという空のファイルを圧縮したローカルヘッダ
50 4B 03 04　ローカルファイルヘッダのシグニチャ
14 00  展開に必要な最低バージョン(値が20なのでv2.0)
00 00　ゼネラルパーパスビットフラグ　このZIPがどういう性質を持っているかを表す(暗号化の有無など)
00 00　圧縮方式　Deflateなら 08 00
66 93  最後に更新された時間　(102 147)
26 53　最後に更新された日付 (38 83)
00 00 00 00　CRC-32の値
00 00 00 00　圧縮された後のサイズ
00 00 00 00　圧縮前のサイズ
01 00　ファイル名の長さ
00 00　エクストラフィールド
61　ファイル名(a)　a.txtという名前ならa.txtになる　あ.txtならあ.txtになる
ここにエクストラフィールド　大体0Byte
日本語ファイル名の時はエクストラフィールドがつくみたい(?)
75 70 0C 00 01 BC D5 06 31 E3 81 82 2E 74 78 74

0x7075 tag for this extra block type ("up")
0x000c total data size for this block (12)
0x01 version of this extra field, currently 1 (1byte)
0x3106D5BC NameCRC 4bytes
E3 81 82 2E 74 78 74 UTF-8のバージョンでのエントリファイル名(E38182がUTF8であを表す) 2E 74 78 74 が .txtを表す
TOTAL DATA SIZE FOR THIS BLOCKはファイル名のUTF8バイト数+5となる　つまりエクストラフィールドのバイト数もUTF8表記ファイル名のバイト数+9となる


ここから圧縮されたファイルデータ　aは空なので0Byte

セントラルディレクトリ

50 4B 01 02　セントラルディレクトリのシグニチャ
14 00  作成バージョン
14 00　解凍に必要なバージョン
00 00　汎用ビットフラグ（ゼネラルパーパスビットフラグ）
00 00　圧縮方式
66 93　最終更新時間
26 53　最終更新日時
00 00 00 00　CRC32
00 00 00 00　圧縮サイズ
00 00 00 00　元サイズ
01 00　ファイル名長
24 00　拡張フィールド長　00 00でも多分大丈夫
00 00　ファイルコメント長
00 00　ファイルが開始するディスク番号
00 00  内部ファイル属性
20 00 00 00　外部ファイル属性　ファイルなら20 00 00 00 フォルダなら 10 00 00 00
00 00 00 00　ローカルファイルヘッダの相対オフセット
61　ファイル名
0A 00 20 00 00 00 00 00 01 00 18 00 EC 5F 9F 5E 01 A3 D7 01 CA C5 CB EE 17 A3 D7 01 EC 5F 9F 5E 01 A3 D7 01　拡張フィールド

0x000A　Windows NTFS　現在のマッピング
0x0020　解凍に必要なバージョン　いままで0x14なのにここが0x20なのは謎だが多分暗号化しないなら多分0x20で大丈夫
0x0000　ゼネラルパーパスビットフラグ　
0x0000　圧縮形式　無圧縮なら0x0000だしDeflateなら0x0008
0x0001　タイムスタンプ?　1
0x0018　タイムスタンプ?　24
0x5E9F5FEC　CRC32?
0xA301　圧縮後サイズ
0xD701　圧縮前サイズ　どちらもこんなに大きくない…???



今拡張フィールドのバイト数を0にして拡張フィールドの領域を削除してZIPを作っても同様に解凍ができた　またエラーが出ない　多分実装する上では特にいらないと思う
ここを消すと生成されたタイムスタンプの値がZIPファイルに書き込まれたタイムスタンプになる。（おそらく拡張フィールドにはより正確なタイムスタンプが使われていることが予想される）
多分ひらがなファイルなどに対しても大丈夫な0x7075から始まるエクストラフィールドをここでも使えばいいと思う　最悪いらん



この更新された日時が厄介で何を基準にしているかさっぱりわからない
しかし、DOSのタイムスタンプを用いているようだ。　(https://pkware.cachefly.net/webdocs/casestudies/APPNOTE.TXT　の　4.4.6に書いてある)
ここの 66 93 26 53
93 66 は　1001001101100110　10010 011011 00110 (18 27 06) 時間の精度が2秒なので　-> 18:27:12-13
53 26 は　0101001100100110　0101001 1001 00110 (41 09 06) DOSのタイムスタンプは1980年基準なので1980+41=2021
つまり
53 26 93 66 (2021年09月06日18時27分13秒)をリトルエンディアンにすると、 66 93 26 53となる
それぞれ年月日が16ビット、時分秒が16ビットの情報量を持つ


0byteのaというファイルを圧縮したときの最後のヘッダ　(end of central directory record)

リトルエンディアンなのでPK\05\06が 50 4B 05 06 になる

50 4B 05 06　　end of central dir signature
00 00           number of this disk
00 00           number of the disk with the start of the central directory
01 00              total number of entries in the central directory on this disk　このディスクでのセントラルディレクトリの数
01 00               total number of entries in the central directory　セントラルディレクトリの総数
53 00 00 00         size of the central directory　セントラルディレクトリの大きさ
1F 00 00 00     offset of start of central directory with respect to the starting disk number　セントラルディレクトリが始まるインデックス
00 00       comment

なにもいれてないときのヘッダ

50 4B 05 06
00 00
00 00
00 00
00 00
00 00 00 00
00 00 00 00
00 00

違うところ
(offset of start of central directory with respect to the starting disk number)
1個目のセントラルディレクトリの始まる位置で、何もないを圧縮した場合ローカルファイルヘッダがないので0x00000000から始まる。
1個以上のファイル・フォルダを圧縮した場合ローカルファイルヘッダが30byte + 1個目のファイル名の長さ(上の比較ではaというファイルは1byteの長さなので30+1で31(0x1F)から始まる)


複数のファイルを圧縮するとき

ローカルファイルヘッダ（FILE1）　
ファイル名（FILE1）　フォルダの場合　フォルダaなら　ファイル名は　a/になる
圧縮ファイルデータ（FILE1）

ローカルファイルヘッダ（FILE2）
ファイル名（FILE2）
圧縮ファイルデータ（FILE2）

---

セントラルディレクトリ（FILE1）
ファイル名（FILE1）
エクストラフィールド（FILE1）

セントラルディレクトリ（FILE2）
ファイル名（FILE2）
エクストラフィールド（FILE2）

エンドセントラルディレクトリレコード(１つだけ)
size of the central directory　セントラルディレクトリの大きさ　は　全部のセントラルディレクトリの合計サイズ
offset of start of central directory with respect to the starting disk number　セントラルディレクトリが始まるインデックス　は　1個目の始まるセントラルディレクトリの位置
1つのZIPで全部完結するなら　total number of entries in the central directory on this disk　＝　total number of entries in the central directory　で　セントラルディレクトリの総数
同様に　number of this disk　＝　number of the disk with the start of the central directory　で　0x00だと思う